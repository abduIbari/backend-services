services:
  tododb:
    image: postgres:15
    container_name: tododb
    environment:
      POSTGRES_USER: abdul
      POSTGRES_PASSWORD: password
      POSTGRES_DB: tododb
    ports:
      - "5432:5432"
    volumes:
      - todo-db-data:/var/lib/postgresql/data
    networks:
      - app-network

  todo-service:
    build: ./backend/todo-service
    container_name: todo-service
    depends_on:
      - tododb
    environment:
      POSTGRES_HOST: tododb
      POSTGRES_USER: abdul
      POSTGRES_PASSWORD: password
      POSTGRES_DB: tododb
    ports:
      - "3000:3000"
    networks:
      - app-network

  userdb:
    image: postgres:15
    container_name: userdb
    environment:
      POSTGRES_USER: abdul
      POSTGRES_PASSWORD: password
      POSTGRES_DB: userdb
    volumes:
      - user-db-data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - app-network

  user-service:
    build:
      context: ./backend/user-service
    container_name: user-service
    ports:
      - "3001:3001"
    depends_on:
      - userdb
    environment:
      POSTGRES_HOST: userdb
      POSTGRES_USER: abdul
      POSTGRES_PASSWORD: password
      POSTGRES_DB: userdb
    networks:
      - app-network

  pg-admin:
    container_name: container-pgadmin
    image: dpage/pgadmin4
    depends_on:
      - tododb
      - userdb
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=root
    restart: unless-stopped
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
    container_name: angular-frontend
    ports:
      - "4200:8080"
    depends_on:
      - todo-service
      - user-service
    networks:
      - app-network

volumes:
  todo-db-data:
  user-db-data:

networks:
  app-network:
    driver: bridge
